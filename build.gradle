buildscript {
    ext.detekt_version = "1.17.1"
    ext.junit_version = "5.7.2"
    ext.mockk_version = "1.11.0"
    ext.swagger_version = "3.0.0"
}

plugins {
    id "org.springframework.boot" version "2.5.1"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "org.jetbrains.kotlin.jvm" version "1.5.10"
    id "org.jetbrains.kotlin.plugin.spring" version "1.5.10"
    id 'com.google.cloud.tools.jib' version '3.0.0'
    id "io.gitlab.arturbosch.detekt" version "${detekt_version}"
}

apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'

group = "com.example"
java.sourceCompatibility = JavaVersion.VERSION_16

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")

    implementation("org.springframework.boot:spring-boot-starter-data-jdbc")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-jdbc")

    implementation("io.springfox:springfox-boot-starter:${swagger_version}")
    implementation("io.springfox:springfox-swagger-ui:${swagger_version}")

    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-web")
    runtimeOnly("mysql:mysql-connector-java")

    developmentOnly("org.springframework.boot:spring-boot-devtools")

    testImplementation("org.junit.jupiter:junit-jupiter:${junit_version}")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("io.mockk:mockk:${mockk_version}")

    detektPlugins("io.gitlab.arturbosch.detekt:detekt-formatting:${detekt_version}")
    implementation "org.jetbrains.kotlin:kotlin-script-runtime:1.5.10"
}

test {
    useJUnitPlatform()
}

detekt {
    buildUponDefaultConfig = true
    allRules = false
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '16'
    }
}

bootRun {
    jvmArgs = ['-Dspring.profiles.active=localhost']
    sourceResources sourceSets.main
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/kotlin/main")
    }
}

jib {
    from {
        image = 'openjdk:16'
    }
    to {
        image = 'openjdk:16-slim'
    }
    container {
        creationTime = "USE_CURRENT_TIMESTAMP"
        ports = ['8080']
    }
}
